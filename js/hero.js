function Hero(){		this.left = false;	this.right = false;	this.up = false;	this.down = false;	this.walkspeed = 2;	this.rect = null;	this.jumping = false;	this.jumppower = 10;	this.maxfallspeed = 10;	this.climbing = false;	this.shooting = false;		this.setupHero = function(name, x, y){		this.setupSprite(name, x, y);		this.loadAnim("walk", 0, 8, "walkright");		this.loadAnim("walk", 16, 8, "walkleft");		this.loadAnim("climb", 0, 8, "climb");		this.loadAnim("jump", 0, 1, "jumpright");		this.loadAnim("jump", 16, 1, "jumpleft");		this.loadAnim("shoot", 0, 3, "shootright");		this.loadAnim("shoot", 16, 3, "shootleft");		this.currentAnim = "walk";		return this;	}		this.keyDown = function(event){		//LEFT		if(event.keyCode == 37){			if(!this.shooting){				this.dir = 16;				this.velx = -this.walkspeed; 				this.left = true;			}		}		//RIGHT		else if(event.keyCode == 39){			if(!this.shooting){				this.dir = 0;				this.velx = this.walkspeed;				this.right = true;			}		}		//UP		else if(event.keyCode == 38){			if(!this.climbing)				if(isLadder(map, toGridCoord(this.rect.center(), tileSize))){					this.climbing = true;					this.jumping = false;				}			if(this.climbing){				this.vely = -1;				this.up = true			}				}		//DOWN		else if(event.keyCode == 40){			if(this.climbing){				this.vely = 1;				this.down = true;			}		}		//SHIFT		else if(event.keyCode == 16){			if(!this.jumping){				this.climbing = false;				this.jumping = true;				this.vely = -this.jumppower;			}		}				//CTRL		else if(event.keyCode == 17){			if(!this.jumping && !this.climbing && !this.shooting){				this.velx=0;				this.vely=0;				this.shooting = true;				playSound("s_shot");				playSound("s_shell");			}		}	}		this.keyUp = function(event){				if(event.keyCode == 37){			this.left = false;		}		else if(event.keyCode == 39){			this.right = false;		}		else if(event.keyCode == 38){			this.up = false;		}		else if(event.keyCode == 40){			this.down = false;		}	}		this.detectors = function(){		rect = new Rectangle(this.rect.x, this.rect.y, tileSize+1, tileSize+1);		return rect;	}			this.update = function()	{			if(this.climbing)			this.changeAnim("climb");		else if(this.jumping)			this.changeAnim("jump");		else if(this.shooting)			this.changeAnim("shoot");		else			this.changeAnim("walk");					if(this.currentAnim == "shoot" && this.animHasFinished())			this.shooting = false;			if(!isLadder(map, toGridCoord(this.rect.bottomcenter(), tileSize)))			this.climbing = false;			if(!isWall(map, toGridCoord(this.detectors().bottomcenter(), tileSize)) && !this.climbing){			this.jumping = true;		}				if(!(this.left||this.right)){			this.velx = 0;		}				if(!(this.up||this.down) && !this.jumping){			this.vely = 0;		}				if(this.jumping){			if(this.vely < this.maxfallspeed)				this.vely++;		}					if(this.velx != 0 || this.vely != 0){			newpos = new Rectangle(this.rect.x + this.velx, this.rect.y + this.vely, tileSize, tileSize);						if(this.velx > 0)				if(!isWall(map, toGridCoord(newpos.rightcenter(), tileSize)))					this.rect.x = newpos.x;			if(this.velx < 0)				if(!isWall(map, toGridCoord(newpos.leftcenter(), tileSize)))					this.rect.x = newpos.x;			if(this.vely > 0){				if(isWall(map, toGridCoord(newpos.bottomcenter(), tileSize))){					this.jumping = false;					this.vely = 0;					while(newpos.y % tileSize != 0)						newpos.y--;				}				this.rect.y = newpos.y;			}			if(this.vely < 0){				if(isWall(map, toGridCoord(newpos.topcenter(), tileSize))){					this.vely = 0;					while(newpos.y % tileSize != 0)						newpos.y++;				}				this.rect.y = newpos.y;			}			if(!this.animIsRunning){				startSpriteAnim(this, 50, true);			}		}		else{			if(this.shooting){				startSpriteAnim(this, 30, false);			}			else if(this.animIsRunning){				stopSpriteAnim(this);			}		}	}	}Hero.prototype = new Sprite;